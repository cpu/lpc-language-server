// Generated from grammar/LPCLexer.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class LPCLexer extends antlr.Lexer {
    public static readonly Identifier = 1;
    public static readonly AUTO = 2;
    public static readonly BREAK = 3;
    public static readonly CASE = 4;
    public static readonly CHAR = 5;
    public static readonly CLOSURE = 6;
    public static readonly CONST = 7;
    public static readonly CONTINUE = 8;
    public static readonly DEFAULT = 9;
    public static readonly DO = 10;
    public static readonly ECHO = 11;
    public static readonly ELSE = 12;
    public static readonly ELIF = 13;
    public static readonly ENDIF = 14;
    public static readonly ENUM = 15;
    public static readonly EXTERN = 16;
    public static readonly FLOAT = 17;
    public static readonly FOR = 18;
    public static readonly FOREACH = 19;
    public static readonly GOTO = 20;
    public static readonly HASH = 21;
    public static readonly IF = 22;
    public static readonly IFDEF = 23;
    public static readonly IFNDEF = 24;
    public static readonly IN = 25;
    public static readonly INCLUDE = 26;
    public static readonly INHERIT = 27;
    public static readonly INT = 28;
    public static readonly LINE = 29;
    public static readonly MAPPING = 30;
    public static readonly OBJECT = 31;
    public static readonly PRAGMA = 32;
    public static readonly REGISTER = 33;
    public static readonly RETURN = 34;
    public static readonly STATUS = 35;
    public static readonly STRUCT = 36;
    public static readonly STRING = 37;
    public static readonly SYMBOL = 38;
    public static readonly SWITCH = 39;
    public static readonly TYPEDEF = 40;
    public static readonly UNION = 41;
    public static readonly UNKNOWN = 42;
    public static readonly UNDEF = 43;
    public static readonly VOID = 44;
    public static readonly VOLATILE = 45;
    public static readonly WHILE = 46;
    public static readonly PRIVATE = 47;
    public static readonly PROTECTED = 48;
    public static readonly PUBLIC = 49;
    public static readonly STATIC = 50;
    public static readonly PLUS = 51;
    public static readonly MINUS = 52;
    public static readonly STAR = 53;
    public static readonly DIV = 54;
    public static readonly MOD = 55;
    public static readonly INC = 56;
    public static readonly DEC = 57;
    public static readonly SHL = 58;
    public static readonly SHR = 59;
    public static readonly LT = 60;
    public static readonly GT = 61;
    public static readonly LE = 62;
    public static readonly GE = 63;
    public static readonly EQ = 64;
    public static readonly NE = 65;
    public static readonly AND = 66;
    public static readonly OR = 67;
    public static readonly XOR = 68;
    public static readonly NOT = 69;
    public static readonly AND_AND = 70;
    public static readonly OR_OR = 71;
    public static readonly QUESTION = 72;
    public static readonly COLON = 73;
    public static readonly SEMI = 74;
    public static readonly COMMA = 75;
    public static readonly DOUBLEDOT = 76;
    public static readonly DOT = 77;
    public static readonly SUPER_ACCESSOR = 78;
    public static readonly ASSIGN = 79;
    public static readonly ADD_ASSIGN = 80;
    public static readonly SUB_ASSIGN = 81;
    public static readonly MUL_ASSIGN = 82;
    public static readonly DIV_ASSIGN = 83;
    public static readonly MOD_ASSIGN = 84;
    public static readonly AND_ASSIGN = 85;
    public static readonly OR_ASSIGN = 86;
    public static readonly XOR_ASSIGN = 87;
    public static readonly ARRAY_OPEN = 88;
    public static readonly ARRAY_CLOSE = 89;
    public static readonly MAPPING_OPEN = 90;
    public static readonly MAPPING_CLOSE = 91;
    public static readonly ARROW = 92;
    public static readonly CLOSURE_OPEN = 93;
    public static readonly CLOSURE_CLOSE = 94;
    public static readonly PAREN_OPEN = 95;
    public static readonly PAREN_CLOSE = 96;
    public static readonly CURLY_OPEN = 97;
    public static readonly CURLY_CLOSE = 98;
    public static readonly SQUARE_OPEN = 99;
    public static readonly SQUARE_CLOSE = 100;
    public static readonly BACKSLASH = 101;
    public static readonly IntegerConstant = 102;
    public static readonly FloatingConstant = 103;
    public static readonly STRING_START = 104;
    public static readonly StringLiteral = 105;
    public static readonly CharacterConstant = 106;
    public static readonly COMMENT = 107;
    public static readonly LINE_COMMENT = 108;
    public static readonly DEFINE = 109;
    public static readonly WS = 110;
    public static readonly END_DEFINE = 111;
    public static readonly STRING_END = 112;
    public static readonly NEWLINE = 113;
    public static readonly DEFINE_MODE = 1;
    public static readonly STRING_MODE = 2;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, null, "'auto'", "'break'", "'case'", "'char'", "'closure'", 
        "'const'", "'continue'", "'default'", "'do'", "'echo'", "'else'", 
        "'elif'", "'endif'", "'enum'", "'extern'", "'float'", "'for'", "'foreach'", 
        "'goto'", "'#'", "'if'", "'ifdef'", "'ifndef'", "'in'", "'include'", 
        "'inherit'", "'int'", "'line'", "'mapping'", "'object'", "'pragma'", 
        "'register'", "'return'", "'status'", "'struct'", "'string'", "'symbol'", 
        "'switch'", "'typedef'", "'union'", "'unknown'", "'undef'", "'void'", 
        "'volatile'", "'while'", "'private'", "'protected'", "'public'", 
        "'static'", "'+'", "'-'", "'*'", "'/'", "'%'", "'++'", "'--'", "'<<'", 
        "'>>'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&'", "'|'", 
        "'^'", "'!'", "'&&'", "'||'", "'?'", "':'", "';'", "','", "'..'", 
        "'.'", "'::'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", 
        "'|='", "'^='", "'({'", "'})'", "'(['", "'])'", "'->'", "'(:'", 
        "':)'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'\\'", null, 
        null, null, null, null, null, null, null, null, "'\\n'", null, "'\\\\n'"
    ];

    public static readonly symbolicNames = [
        null, "Identifier", "AUTO", "BREAK", "CASE", "CHAR", "CLOSURE", 
        "CONST", "CONTINUE", "DEFAULT", "DO", "ECHO", "ELSE", "ELIF", "ENDIF", 
        "ENUM", "EXTERN", "FLOAT", "FOR", "FOREACH", "GOTO", "HASH", "IF", 
        "IFDEF", "IFNDEF", "IN", "INCLUDE", "INHERIT", "INT", "LINE", "MAPPING", 
        "OBJECT", "PRAGMA", "REGISTER", "RETURN", "STATUS", "STRUCT", "STRING", 
        "SYMBOL", "SWITCH", "TYPEDEF", "UNION", "UNKNOWN", "UNDEF", "VOID", 
        "VOLATILE", "WHILE", "PRIVATE", "PROTECTED", "PUBLIC", "STATIC", 
        "PLUS", "MINUS", "STAR", "DIV", "MOD", "INC", "DEC", "SHL", "SHR", 
        "LT", "GT", "LE", "GE", "EQ", "NE", "AND", "OR", "XOR", "NOT", "AND_AND", 
        "OR_OR", "QUESTION", "COLON", "SEMI", "COMMA", "DOUBLEDOT", "DOT", 
        "SUPER_ACCESSOR", "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
        "DIV_ASSIGN", "MOD_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", 
        "ARRAY_OPEN", "ARRAY_CLOSE", "MAPPING_OPEN", "MAPPING_CLOSE", "ARROW", 
        "CLOSURE_OPEN", "CLOSURE_CLOSE", "PAREN_OPEN", "PAREN_CLOSE", "CURLY_OPEN", 
        "CURLY_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", "BACKSLASH", "IntegerConstant", 
        "FloatingConstant", "STRING_START", "StringLiteral", "CharacterConstant", 
        "COMMENT", "LINE_COMMENT", "DEFINE", "WS", "END_DEFINE", "STRING_END", 
        "NEWLINE"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE", "DEFINE_MODE", "STRING_MODE",
    ];

    public static readonly ruleNames = [
        "AUTO", "BREAK", "CASE", "CHAR", "CLOSURE", "CONST", "CONTINUE", 
        "DEFAULT", "DO", "ECHO", "ELSE", "ELIF", "ENDIF", "ENUM", "EXTERN", 
        "FLOAT", "FOR", "FOREACH", "GOTO", "HASH", "IF", "IFDEF", "IFNDEF", 
        "IN", "INCLUDE", "INHERIT", "INT", "LINE", "MAPPING", "OBJECT", 
        "PRAGMA", "REGISTER", "RETURN", "STATUS", "STRUCT", "STRING", "SYMBOL", 
        "SWITCH", "TYPEDEF", "UNION", "UNKNOWN", "UNDEF", "VOID", "VOLATILE", 
        "WHILE", "PRIVATE", "PROTECTED", "PUBLIC", "STATIC", "PLUS", "MINUS", 
        "STAR", "DIV", "MOD", "INC", "DEC", "SHL", "SHR", "LT", "GT", "LE", 
        "GE", "EQ", "NE", "AND", "OR", "XOR", "NOT", "AND_AND", "OR_OR", 
        "QUESTION", "COLON", "SEMI", "COMMA", "DOUBLEDOT", "DOT", "SUPER_ACCESSOR", 
        "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", 
        "MOD_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "ARRAY_OPEN", 
        "ARRAY_CLOSE", "MAPPING_OPEN", "MAPPING_CLOSE", "ARROW", "CLOSURE_OPEN", 
        "CLOSURE_CLOSE", "PAREN_OPEN", "PAREN_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
        "SQUARE_OPEN", "SQUARE_CLOSE", "BACKSLASH", "IntegerConstant", "FloatingConstant", 
        "STRING_START", "StringLiteral", "CharacterConstant", "Identifier", 
        "COMMENT", "LINE_COMMENT", "DEFINE", "WS", "DEFINE_CONTENT", "NEWLINE", 
        "END_DEFINE", "STRING_CONTENT", "STRING_END",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, LPCLexer._ATN, LPCLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "LPCLexer.g4"; }

    public get literalNames(): (string | null)[] { return LPCLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return LPCLexer.symbolicNames; }
    public get ruleNames(): string[] { return LPCLexer.ruleNames; }

    public get serializedATN(): number[] { return LPCLexer._serializedATN; }

    public get channelNames(): string[] { return LPCLexer.channelNames; }

    public get modeNames(): string[] { return LPCLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,113,811,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,
        31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
        38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,
        44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,
        51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,
        57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,
        64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
        70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
        77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,
        83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,
        90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,
        96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,
        102,2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,
        2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,
        7,113,2,114,7,114,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,
        12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,
        14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
        17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,
        19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,
        26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,
        28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,
        30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,
        32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
        34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,
        35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,
        37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,
        39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,
        41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,
        43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,
        45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,
        46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,
        48,1,48,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,
        53,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,
        58,1,58,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,
        63,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,
        68,1,69,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,
        74,1,74,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,78,1,78,1,78,1,79,1,
        79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,1,83,1,83,1,
        83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,1,87,1,87,1,87,1,
        88,1,88,1,88,1,89,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,91,1,92,1,
        92,1,92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,
        98,1,99,1,99,1,100,3,100,674,8,100,1,100,4,100,677,8,100,11,100,
        12,100,678,1,101,3,101,682,8,101,1,101,5,101,685,8,101,10,101,12,
        101,688,9,101,1,101,1,101,4,101,692,8,101,11,101,12,101,693,1,101,
        1,101,3,101,698,8,101,1,101,4,101,701,8,101,11,101,12,101,702,3,
        101,705,8,101,1,102,1,102,1,102,1,102,1,103,1,103,5,103,713,8,103,
        10,103,12,103,716,9,103,1,103,1,103,1,104,1,104,1,104,1,104,3,104,
        724,8,104,1,104,1,104,1,105,1,105,5,105,730,8,105,10,105,12,105,
        733,9,105,1,105,1,105,1,106,1,106,1,106,1,106,5,106,741,8,106,10,
        106,12,106,744,9,106,1,106,1,106,1,106,1,106,1,106,1,107,1,107,1,
        107,1,107,5,107,755,8,107,10,107,12,107,758,9,107,1,107,1,107,1,
        107,1,107,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
        1,108,1,109,4,109,775,8,109,11,109,12,109,776,1,109,1,109,1,110,
        4,110,782,8,110,11,110,12,110,783,1,110,1,110,3,110,788,8,110,1,
        110,1,110,1,111,1,111,1,111,1,111,1,111,1,112,1,112,1,112,1,112,
        1,113,1,113,1,113,3,113,804,8,113,1,113,1,113,1,114,1,114,1,114,
        1,114,2,742,756,0,115,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
        65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
        87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,
        54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,
        127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,
        73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,
        165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,
        92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,
        101,203,102,205,103,207,104,209,105,211,106,213,1,215,107,217,108,
        219,109,221,110,223,0,225,113,227,111,229,0,231,112,3,0,1,2,9,1,
        0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,4,0,10,10,13,13,39,39,
        92,92,4,0,36,36,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
        3,0,9,10,13,13,32,32,2,0,10,10,92,92,3,0,10,10,34,34,92,92,825,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
        1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
        1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,
        0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,
        0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,
        131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,
        0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,
        1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,
        0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,
        0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,
        177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,
        0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,
        1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,
        0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,
        0,0,0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,1,
        223,1,0,0,0,1,225,1,0,0,0,1,227,1,0,0,0,2,229,1,0,0,0,2,231,1,0,
        0,0,3,233,1,0,0,0,5,238,1,0,0,0,7,244,1,0,0,0,9,249,1,0,0,0,11,254,
        1,0,0,0,13,262,1,0,0,0,15,268,1,0,0,0,17,277,1,0,0,0,19,285,1,0,
        0,0,21,288,1,0,0,0,23,293,1,0,0,0,25,298,1,0,0,0,27,303,1,0,0,0,
        29,309,1,0,0,0,31,314,1,0,0,0,33,321,1,0,0,0,35,327,1,0,0,0,37,331,
        1,0,0,0,39,339,1,0,0,0,41,344,1,0,0,0,43,346,1,0,0,0,45,349,1,0,
        0,0,47,355,1,0,0,0,49,362,1,0,0,0,51,365,1,0,0,0,53,373,1,0,0,0,
        55,381,1,0,0,0,57,385,1,0,0,0,59,390,1,0,0,0,61,398,1,0,0,0,63,405,
        1,0,0,0,65,412,1,0,0,0,67,421,1,0,0,0,69,428,1,0,0,0,71,435,1,0,
        0,0,73,442,1,0,0,0,75,449,1,0,0,0,77,456,1,0,0,0,79,463,1,0,0,0,
        81,471,1,0,0,0,83,477,1,0,0,0,85,485,1,0,0,0,87,491,1,0,0,0,89,496,
        1,0,0,0,91,505,1,0,0,0,93,511,1,0,0,0,95,519,1,0,0,0,97,529,1,0,
        0,0,99,536,1,0,0,0,101,543,1,0,0,0,103,545,1,0,0,0,105,547,1,0,0,
        0,107,549,1,0,0,0,109,551,1,0,0,0,111,553,1,0,0,0,113,556,1,0,0,
        0,115,559,1,0,0,0,117,562,1,0,0,0,119,565,1,0,0,0,121,567,1,0,0,
        0,123,569,1,0,0,0,125,572,1,0,0,0,127,575,1,0,0,0,129,578,1,0,0,
        0,131,581,1,0,0,0,133,583,1,0,0,0,135,585,1,0,0,0,137,587,1,0,0,
        0,139,589,1,0,0,0,141,592,1,0,0,0,143,595,1,0,0,0,145,597,1,0,0,
        0,147,599,1,0,0,0,149,601,1,0,0,0,151,603,1,0,0,0,153,606,1,0,0,
        0,155,608,1,0,0,0,157,611,1,0,0,0,159,613,1,0,0,0,161,616,1,0,0,
        0,163,619,1,0,0,0,165,622,1,0,0,0,167,625,1,0,0,0,169,628,1,0,0,
        0,171,631,1,0,0,0,173,634,1,0,0,0,175,637,1,0,0,0,177,640,1,0,0,
        0,179,643,1,0,0,0,181,646,1,0,0,0,183,649,1,0,0,0,185,652,1,0,0,
        0,187,655,1,0,0,0,189,658,1,0,0,0,191,660,1,0,0,0,193,662,1,0,0,
        0,195,664,1,0,0,0,197,666,1,0,0,0,199,668,1,0,0,0,201,670,1,0,0,
        0,203,673,1,0,0,0,205,681,1,0,0,0,207,706,1,0,0,0,209,710,1,0,0,
        0,211,719,1,0,0,0,213,727,1,0,0,0,215,736,1,0,0,0,217,750,1,0,0,
        0,219,763,1,0,0,0,221,774,1,0,0,0,223,781,1,0,0,0,225,791,1,0,0,
        0,227,796,1,0,0,0,229,803,1,0,0,0,231,807,1,0,0,0,233,234,5,97,0,
        0,234,235,5,117,0,0,235,236,5,116,0,0,236,237,5,111,0,0,237,4,1,
        0,0,0,238,239,5,98,0,0,239,240,5,114,0,0,240,241,5,101,0,0,241,242,
        5,97,0,0,242,243,5,107,0,0,243,6,1,0,0,0,244,245,5,99,0,0,245,246,
        5,97,0,0,246,247,5,115,0,0,247,248,5,101,0,0,248,8,1,0,0,0,249,250,
        5,99,0,0,250,251,5,104,0,0,251,252,5,97,0,0,252,253,5,114,0,0,253,
        10,1,0,0,0,254,255,5,99,0,0,255,256,5,108,0,0,256,257,5,111,0,0,
        257,258,5,115,0,0,258,259,5,117,0,0,259,260,5,114,0,0,260,261,5,
        101,0,0,261,12,1,0,0,0,262,263,5,99,0,0,263,264,5,111,0,0,264,265,
        5,110,0,0,265,266,5,115,0,0,266,267,5,116,0,0,267,14,1,0,0,0,268,
        269,5,99,0,0,269,270,5,111,0,0,270,271,5,110,0,0,271,272,5,116,0,
        0,272,273,5,105,0,0,273,274,5,110,0,0,274,275,5,117,0,0,275,276,
        5,101,0,0,276,16,1,0,0,0,277,278,5,100,0,0,278,279,5,101,0,0,279,
        280,5,102,0,0,280,281,5,97,0,0,281,282,5,117,0,0,282,283,5,108,0,
        0,283,284,5,116,0,0,284,18,1,0,0,0,285,286,5,100,0,0,286,287,5,111,
        0,0,287,20,1,0,0,0,288,289,5,101,0,0,289,290,5,99,0,0,290,291,5,
        104,0,0,291,292,5,111,0,0,292,22,1,0,0,0,293,294,5,101,0,0,294,295,
        5,108,0,0,295,296,5,115,0,0,296,297,5,101,0,0,297,24,1,0,0,0,298,
        299,5,101,0,0,299,300,5,108,0,0,300,301,5,105,0,0,301,302,5,102,
        0,0,302,26,1,0,0,0,303,304,5,101,0,0,304,305,5,110,0,0,305,306,5,
        100,0,0,306,307,5,105,0,0,307,308,5,102,0,0,308,28,1,0,0,0,309,310,
        5,101,0,0,310,311,5,110,0,0,311,312,5,117,0,0,312,313,5,109,0,0,
        313,30,1,0,0,0,314,315,5,101,0,0,315,316,5,120,0,0,316,317,5,116,
        0,0,317,318,5,101,0,0,318,319,5,114,0,0,319,320,5,110,0,0,320,32,
        1,0,0,0,321,322,5,102,0,0,322,323,5,108,0,0,323,324,5,111,0,0,324,
        325,5,97,0,0,325,326,5,116,0,0,326,34,1,0,0,0,327,328,5,102,0,0,
        328,329,5,111,0,0,329,330,5,114,0,0,330,36,1,0,0,0,331,332,5,102,
        0,0,332,333,5,111,0,0,333,334,5,114,0,0,334,335,5,101,0,0,335,336,
        5,97,0,0,336,337,5,99,0,0,337,338,5,104,0,0,338,38,1,0,0,0,339,340,
        5,103,0,0,340,341,5,111,0,0,341,342,5,116,0,0,342,343,5,111,0,0,
        343,40,1,0,0,0,344,345,5,35,0,0,345,42,1,0,0,0,346,347,5,105,0,0,
        347,348,5,102,0,0,348,44,1,0,0,0,349,350,5,105,0,0,350,351,5,102,
        0,0,351,352,5,100,0,0,352,353,5,101,0,0,353,354,5,102,0,0,354,46,
        1,0,0,0,355,356,5,105,0,0,356,357,5,102,0,0,357,358,5,110,0,0,358,
        359,5,100,0,0,359,360,5,101,0,0,360,361,5,102,0,0,361,48,1,0,0,0,
        362,363,5,105,0,0,363,364,5,110,0,0,364,50,1,0,0,0,365,366,5,105,
        0,0,366,367,5,110,0,0,367,368,5,99,0,0,368,369,5,108,0,0,369,370,
        5,117,0,0,370,371,5,100,0,0,371,372,5,101,0,0,372,52,1,0,0,0,373,
        374,5,105,0,0,374,375,5,110,0,0,375,376,5,104,0,0,376,377,5,101,
        0,0,377,378,5,114,0,0,378,379,5,105,0,0,379,380,5,116,0,0,380,54,
        1,0,0,0,381,382,5,105,0,0,382,383,5,110,0,0,383,384,5,116,0,0,384,
        56,1,0,0,0,385,386,5,108,0,0,386,387,5,105,0,0,387,388,5,110,0,0,
        388,389,5,101,0,0,389,58,1,0,0,0,390,391,5,109,0,0,391,392,5,97,
        0,0,392,393,5,112,0,0,393,394,5,112,0,0,394,395,5,105,0,0,395,396,
        5,110,0,0,396,397,5,103,0,0,397,60,1,0,0,0,398,399,5,111,0,0,399,
        400,5,98,0,0,400,401,5,106,0,0,401,402,5,101,0,0,402,403,5,99,0,
        0,403,404,5,116,0,0,404,62,1,0,0,0,405,406,5,112,0,0,406,407,5,114,
        0,0,407,408,5,97,0,0,408,409,5,103,0,0,409,410,5,109,0,0,410,411,
        5,97,0,0,411,64,1,0,0,0,412,413,5,114,0,0,413,414,5,101,0,0,414,
        415,5,103,0,0,415,416,5,105,0,0,416,417,5,115,0,0,417,418,5,116,
        0,0,418,419,5,101,0,0,419,420,5,114,0,0,420,66,1,0,0,0,421,422,5,
        114,0,0,422,423,5,101,0,0,423,424,5,116,0,0,424,425,5,117,0,0,425,
        426,5,114,0,0,426,427,5,110,0,0,427,68,1,0,0,0,428,429,5,115,0,0,
        429,430,5,116,0,0,430,431,5,97,0,0,431,432,5,116,0,0,432,433,5,117,
        0,0,433,434,5,115,0,0,434,70,1,0,0,0,435,436,5,115,0,0,436,437,5,
        116,0,0,437,438,5,114,0,0,438,439,5,117,0,0,439,440,5,99,0,0,440,
        441,5,116,0,0,441,72,1,0,0,0,442,443,5,115,0,0,443,444,5,116,0,0,
        444,445,5,114,0,0,445,446,5,105,0,0,446,447,5,110,0,0,447,448,5,
        103,0,0,448,74,1,0,0,0,449,450,5,115,0,0,450,451,5,121,0,0,451,452,
        5,109,0,0,452,453,5,98,0,0,453,454,5,111,0,0,454,455,5,108,0,0,455,
        76,1,0,0,0,456,457,5,115,0,0,457,458,5,119,0,0,458,459,5,105,0,0,
        459,460,5,116,0,0,460,461,5,99,0,0,461,462,5,104,0,0,462,78,1,0,
        0,0,463,464,5,116,0,0,464,465,5,121,0,0,465,466,5,112,0,0,466,467,
        5,101,0,0,467,468,5,100,0,0,468,469,5,101,0,0,469,470,5,102,0,0,
        470,80,1,0,0,0,471,472,5,117,0,0,472,473,5,110,0,0,473,474,5,105,
        0,0,474,475,5,111,0,0,475,476,5,110,0,0,476,82,1,0,0,0,477,478,5,
        117,0,0,478,479,5,110,0,0,479,480,5,107,0,0,480,481,5,110,0,0,481,
        482,5,111,0,0,482,483,5,119,0,0,483,484,5,110,0,0,484,84,1,0,0,0,
        485,486,5,117,0,0,486,487,5,110,0,0,487,488,5,100,0,0,488,489,5,
        101,0,0,489,490,5,102,0,0,490,86,1,0,0,0,491,492,5,118,0,0,492,493,
        5,111,0,0,493,494,5,105,0,0,494,495,5,100,0,0,495,88,1,0,0,0,496,
        497,5,118,0,0,497,498,5,111,0,0,498,499,5,108,0,0,499,500,5,97,0,
        0,500,501,5,116,0,0,501,502,5,105,0,0,502,503,5,108,0,0,503,504,
        5,101,0,0,504,90,1,0,0,0,505,506,5,119,0,0,506,507,5,104,0,0,507,
        508,5,105,0,0,508,509,5,108,0,0,509,510,5,101,0,0,510,92,1,0,0,0,
        511,512,5,112,0,0,512,513,5,114,0,0,513,514,5,105,0,0,514,515,5,
        118,0,0,515,516,5,97,0,0,516,517,5,116,0,0,517,518,5,101,0,0,518,
        94,1,0,0,0,519,520,5,112,0,0,520,521,5,114,0,0,521,522,5,111,0,0,
        522,523,5,116,0,0,523,524,5,101,0,0,524,525,5,99,0,0,525,526,5,116,
        0,0,526,527,5,101,0,0,527,528,5,100,0,0,528,96,1,0,0,0,529,530,5,
        112,0,0,530,531,5,117,0,0,531,532,5,98,0,0,532,533,5,108,0,0,533,
        534,5,105,0,0,534,535,5,99,0,0,535,98,1,0,0,0,536,537,5,115,0,0,
        537,538,5,116,0,0,538,539,5,97,0,0,539,540,5,116,0,0,540,541,5,105,
        0,0,541,542,5,99,0,0,542,100,1,0,0,0,543,544,5,43,0,0,544,102,1,
        0,0,0,545,546,5,45,0,0,546,104,1,0,0,0,547,548,5,42,0,0,548,106,
        1,0,0,0,549,550,5,47,0,0,550,108,1,0,0,0,551,552,5,37,0,0,552,110,
        1,0,0,0,553,554,5,43,0,0,554,555,5,43,0,0,555,112,1,0,0,0,556,557,
        5,45,0,0,557,558,5,45,0,0,558,114,1,0,0,0,559,560,5,60,0,0,560,561,
        5,60,0,0,561,116,1,0,0,0,562,563,5,62,0,0,563,564,5,62,0,0,564,118,
        1,0,0,0,565,566,5,60,0,0,566,120,1,0,0,0,567,568,5,62,0,0,568,122,
        1,0,0,0,569,570,5,60,0,0,570,571,5,61,0,0,571,124,1,0,0,0,572,573,
        5,62,0,0,573,574,5,61,0,0,574,126,1,0,0,0,575,576,5,61,0,0,576,577,
        5,61,0,0,577,128,1,0,0,0,578,579,5,33,0,0,579,580,5,61,0,0,580,130,
        1,0,0,0,581,582,5,38,0,0,582,132,1,0,0,0,583,584,5,124,0,0,584,134,
        1,0,0,0,585,586,5,94,0,0,586,136,1,0,0,0,587,588,5,33,0,0,588,138,
        1,0,0,0,589,590,5,38,0,0,590,591,5,38,0,0,591,140,1,0,0,0,592,593,
        5,124,0,0,593,594,5,124,0,0,594,142,1,0,0,0,595,596,5,63,0,0,596,
        144,1,0,0,0,597,598,5,58,0,0,598,146,1,0,0,0,599,600,5,59,0,0,600,
        148,1,0,0,0,601,602,5,44,0,0,602,150,1,0,0,0,603,604,5,46,0,0,604,
        605,5,46,0,0,605,152,1,0,0,0,606,607,5,46,0,0,607,154,1,0,0,0,608,
        609,5,58,0,0,609,610,5,58,0,0,610,156,1,0,0,0,611,612,5,61,0,0,612,
        158,1,0,0,0,613,614,5,43,0,0,614,615,5,61,0,0,615,160,1,0,0,0,616,
        617,5,45,0,0,617,618,5,61,0,0,618,162,1,0,0,0,619,620,5,42,0,0,620,
        621,5,61,0,0,621,164,1,0,0,0,622,623,5,47,0,0,623,624,5,61,0,0,624,
        166,1,0,0,0,625,626,5,37,0,0,626,627,5,61,0,0,627,168,1,0,0,0,628,
        629,5,38,0,0,629,630,5,61,0,0,630,170,1,0,0,0,631,632,5,124,0,0,
        632,633,5,61,0,0,633,172,1,0,0,0,634,635,5,94,0,0,635,636,5,61,0,
        0,636,174,1,0,0,0,637,638,5,40,0,0,638,639,5,123,0,0,639,176,1,0,
        0,0,640,641,5,125,0,0,641,642,5,41,0,0,642,178,1,0,0,0,643,644,5,
        40,0,0,644,645,5,91,0,0,645,180,1,0,0,0,646,647,5,93,0,0,647,648,
        5,41,0,0,648,182,1,0,0,0,649,650,5,45,0,0,650,651,5,62,0,0,651,184,
        1,0,0,0,652,653,5,40,0,0,653,654,5,58,0,0,654,186,1,0,0,0,655,656,
        5,58,0,0,656,657,5,41,0,0,657,188,1,0,0,0,658,659,5,40,0,0,659,190,
        1,0,0,0,660,661,5,41,0,0,661,192,1,0,0,0,662,663,5,123,0,0,663,194,
        1,0,0,0,664,665,5,125,0,0,665,196,1,0,0,0,666,667,5,91,0,0,667,198,
        1,0,0,0,668,669,5,93,0,0,669,200,1,0,0,0,670,671,5,92,0,0,671,202,
        1,0,0,0,672,674,3,103,50,0,673,672,1,0,0,0,673,674,1,0,0,0,674,676,
        1,0,0,0,675,677,7,0,0,0,676,675,1,0,0,0,677,678,1,0,0,0,678,676,
        1,0,0,0,678,679,1,0,0,0,679,204,1,0,0,0,680,682,3,103,50,0,681,680,
        1,0,0,0,681,682,1,0,0,0,682,686,1,0,0,0,683,685,7,0,0,0,684,683,
        1,0,0,0,685,688,1,0,0,0,686,684,1,0,0,0,686,687,1,0,0,0,687,689,
        1,0,0,0,688,686,1,0,0,0,689,691,5,46,0,0,690,692,7,0,0,0,691,690,
        1,0,0,0,692,693,1,0,0,0,693,691,1,0,0,0,693,694,1,0,0,0,694,704,
        1,0,0,0,695,697,7,1,0,0,696,698,7,2,0,0,697,696,1,0,0,0,697,698,
        1,0,0,0,698,700,1,0,0,0,699,701,7,0,0,0,700,699,1,0,0,0,701,702,
        1,0,0,0,702,700,1,0,0,0,702,703,1,0,0,0,703,705,1,0,0,0,704,695,
        1,0,0,0,704,705,1,0,0,0,705,206,1,0,0,0,706,707,5,34,0,0,707,708,
        1,0,0,0,708,709,6,102,0,0,709,208,1,0,0,0,710,714,3,207,102,0,711,
        713,3,229,113,0,712,711,1,0,0,0,713,716,1,0,0,0,714,712,1,0,0,0,
        714,715,1,0,0,0,715,717,1,0,0,0,716,714,1,0,0,0,717,718,3,231,114,
        0,718,210,1,0,0,0,719,723,5,39,0,0,720,724,8,3,0,0,721,722,5,92,
        0,0,722,724,9,0,0,0,723,720,1,0,0,0,723,721,1,0,0,0,724,725,1,0,
        0,0,725,726,5,39,0,0,726,212,1,0,0,0,727,731,7,4,0,0,728,730,7,5,
        0,0,729,728,1,0,0,0,730,733,1,0,0,0,731,729,1,0,0,0,731,732,1,0,
        0,0,732,734,1,0,0,0,733,731,1,0,0,0,734,735,6,105,1,0,735,214,1,
        0,0,0,736,737,5,47,0,0,737,738,5,42,0,0,738,742,1,0,0,0,739,741,
        9,0,0,0,740,739,1,0,0,0,741,744,1,0,0,0,742,743,1,0,0,0,742,740,
        1,0,0,0,743,745,1,0,0,0,744,742,1,0,0,0,745,746,5,42,0,0,746,747,
        5,47,0,0,747,748,1,0,0,0,748,749,6,106,2,0,749,216,1,0,0,0,750,751,
        5,47,0,0,751,752,5,47,0,0,752,756,1,0,0,0,753,755,9,0,0,0,754,753,
        1,0,0,0,755,758,1,0,0,0,756,757,1,0,0,0,756,754,1,0,0,0,757,759,
        1,0,0,0,758,756,1,0,0,0,759,760,5,10,0,0,760,761,1,0,0,0,761,762,
        6,107,2,0,762,218,1,0,0,0,763,764,3,41,19,0,764,765,5,100,0,0,765,
        766,5,101,0,0,766,767,5,102,0,0,767,768,5,105,0,0,768,769,5,110,
        0,0,769,770,5,101,0,0,770,771,1,0,0,0,771,772,6,108,3,0,772,220,
        1,0,0,0,773,775,7,6,0,0,774,773,1,0,0,0,775,776,1,0,0,0,776,774,
        1,0,0,0,776,777,1,0,0,0,777,778,1,0,0,0,778,779,6,109,2,0,779,222,
        1,0,0,0,780,782,8,7,0,0,781,780,1,0,0,0,782,783,1,0,0,0,783,781,
        1,0,0,0,783,784,1,0,0,0,784,787,1,0,0,0,785,786,5,92,0,0,786,788,
        5,10,0,0,787,785,1,0,0,0,787,788,1,0,0,0,788,789,1,0,0,0,789,790,
        6,110,4,0,790,224,1,0,0,0,791,792,5,92,0,0,792,793,5,10,0,0,793,
        794,1,0,0,0,794,795,6,111,4,0,795,226,1,0,0,0,796,797,5,10,0,0,797,
        798,1,0,0,0,798,799,6,112,5,0,799,228,1,0,0,0,800,804,8,8,0,0,801,
        802,5,92,0,0,802,804,9,0,0,0,803,800,1,0,0,0,803,801,1,0,0,0,804,
        805,1,0,0,0,805,806,6,113,4,0,806,230,1,0,0,0,807,808,5,34,0,0,808,
        809,1,0,0,0,809,810,6,114,6,0,810,232,1,0,0,0,20,0,1,2,673,678,681,
        686,693,697,702,704,714,723,731,742,756,776,783,787,803,7,2,2,0,
        7,1,0,6,0,0,5,1,0,3,0,0,4,0,0,2,0,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!LPCLexer.__ATN) {
            LPCLexer.__ATN = new antlr.ATNDeserializer().deserialize(LPCLexer._serializedATN);
        }

        return LPCLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(LPCLexer.literalNames, LPCLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return LPCLexer.vocabulary;
    }

    private static readonly decisionsToDFA = LPCLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}